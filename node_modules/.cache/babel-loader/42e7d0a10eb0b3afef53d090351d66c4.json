{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinod\\\\Pavi\\\\BookMovieApp\\\\src\\\\screens\\\\details\\\\Details.js\";\nimport React, { Component } from 'react';\nimport Header from \"../../common/header/Header\";\nimport './Details.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Details extends Component {\n  constructor() {\n    super();\n\n    this.artistClickHandler = url => {\n      window.location = url;\n    };\n\n    this.starClickHandler = id => {\n      let starIconList = [];\n\n      for (let star of this.state.starIcons) {\n        let starNode = star;\n\n        if (star.id <= id) {\n          starNode.color = \"yellow\";\n        } else {\n          starNode.color = \"black\";\n        }\n\n        starIconList.push(starNode);\n      }\n\n      this.setState({\n        starIcons: starIconList\n      });\n    };\n\n    this.state = {\n      movie: {\n        genres: [],\n        trailer_url: \"\",\n        artists: []\n      },\n      starIcons: [{\n        id: 1,\n        stateId: \"star1\",\n        color: \"black\"\n      }, {\n        id: 2,\n        stateId: \"star2\",\n        color: \"black\"\n      }, {\n        id: 3,\n        stateId: \"star3\",\n        color: \"black\"\n      }, {\n        id: 4,\n        stateId: \"star4\",\n        color: \"black\"\n      }, {\n        id: 5,\n        stateId: \"star5\",\n        color: \"black\"\n      }]\n    };\n  }\n\n  componentWillMount() {\n    let that = this;\n    let dataMovie = null;\n    let xhrMovie = new XMLHttpRequest();\n    xhrMovie.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === 4) {\n        that.setState({\n          movie: JSON.parse(this.responseText)\n        });\n      }\n    });\n    xhrMovie.open(\"GET\", this.props.baseUrl + \"movies/\" + this.props.match.params.id);\n    xhrMovie.setRequestHeader(\"Cache-Control\", \"no-cache\");\n    xhrMovie.send(dataMovie);\n  }\n\n  render() {\n    let movie = this.state.movie;\n    const opts = {\n      height: '300',\n      width: '700',\n      playerVars: {\n        autoplay: 1\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        baseUrl: this.props.baseUrl,\n        showBookShowButton: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Details;","map":{"version":3,"names":["React","Component","Header","Details","constructor","artistClickHandler","url","window","location","starClickHandler","id","starIconList","star","state","starIcons","starNode","color","push","setState","movie","genres","trailer_url","artists","stateId","componentWillMount","that","dataMovie","xhrMovie","XMLHttpRequest","addEventListener","readyState","JSON","parse","responseText","open","props","baseUrl","match","params","setRequestHeader","send","render","opts","height","width","playerVars","autoplay"],"sources":["C:/Users/Vinod/Pavi/BookMovieApp/src/screens/details/Details.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Header from \"../../common/header/Header\";\r\nimport './Details.css';\r\n\r\nclass Details extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movie: {\r\n                genres: [],\r\n                trailer_url: \"\",\r\n                artists: []\r\n            },\r\n            starIcons: [{\r\n                id: 1,\r\n                stateId: \"star1\",\r\n                color: \"black\"\r\n            },\r\n            {\r\n                id: 2,\r\n                stateId: \"star2\",\r\n                color: \"black\"\r\n            },\r\n            {\r\n                id: 3,\r\n                stateId: \"star3\",\r\n                color: \"black\"\r\n            },\r\n            {\r\n                id: 4,\r\n                stateId: \"star4\",\r\n                color: \"black\"\r\n            },\r\n            {\r\n                id: 5,\r\n                stateId: \"star5\",\r\n                color: \"black\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let that = this;\r\n        let dataMovie = null;\r\n        let xhrMovie = new XMLHttpRequest();\r\n        xhrMovie.addEventListener(\"readystatechange\", function () {\r\n            if (this.readyState === 4) {\r\n                that.setState({\r\n                    movie: JSON.parse(this.responseText)\r\n                });\r\n            }\r\n        });\r\n\r\n        xhrMovie.open(\"GET\", this.props.baseUrl + \"movies/\" + this.props.match.params.id);\r\n        xhrMovie.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n        xhrMovie.send(dataMovie);\r\n    }\r\n\r\n    artistClickHandler = (url) => {\r\n        window.location = url;\r\n    }\r\n\r\n    starClickHandler = (id) => {\r\n        let starIconList = [];\r\n        for (let star of this.state.starIcons) {\r\n            let starNode = star;\r\n            if (star.id <= id) {\r\n                starNode.color = \"yellow\"\r\n            }\r\n            else {\r\n                starNode.color = \"black\";\r\n\r\n            }\r\n            starIconList.push(starNode);\r\n        }\r\n        this.setState({ starIcons: starIconList });\r\n    }\r\n    \r\n\r\n    render(){\r\n        let movie = this.state.movie;\r\n        const opts = {\r\n            height: '300',\r\n            width: '700',\r\n            playerVars: {\r\n                autoplay: 1\r\n            }\r\n        }\r\n        return(\r\n            <div className=\"details\">\r\n                 <Header baseUrl={this.props.baseUrl} showBookShowButton=\"true\"/>\r\n            </div>    \r\n        );\r\n    }\r\n\r\n}\r\nexport default Details;"],"mappings":"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"},"metadata":{},"sourceType":"module"}