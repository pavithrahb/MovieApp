{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinod\\\\Pavi\\\\BookMovieApp\\\\src\\\\common\\\\header\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal = _ref => {\n  _s();\n\n  let {\n    setShowModal\n  } = _ref;\n  // close the modal when clicking outside the modal.\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  }; // render the modal JSX in the portal div.\n\n\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is a Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) //document.getElementById(\"portal\")\n  );\n};\n\n_s(Modal, \"zNVem5B1U/BPM1VF05fbpVyTiCs=\");\n\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useRef","ReactDom","Modal","setShowModal","modalRef","closeModal","e","target","current","createPortal"],"sources":["C:/Users/Vinod/Pavi/BookMovieApp/src/common/header/Modal.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nexport const Modal = ({ setShowModal }) => {\r\n  // close the modal when clicking outside the modal.\r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  // render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n      <div className=\"modal\">\r\n        <h2>This is a Modal</h2>\r\n        <button onClick={() => setShowModal(false)}>X</button>\r\n      </div>\r\n    </div>,\r\n    //document.getElementById(\"portal\")\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,OAAO,MAAMC,KAAK,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACzC;EACA,MAAMC,QAAQ,GAAGJ,MAAM,EAAvB;;EACA,MAAMK,UAAU,GAAIC,CAAD,IAAO;IACxB,IAAIA,CAAC,CAACC,MAAF,KAAaH,QAAQ,CAACI,OAA1B,EAAmC;MACjCL,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAJD,CAHyC,CASzC;;;EACA,oBAAOF,QAAQ,CAACQ,YAAT,eACL;IAAK,SAAS,EAAC,WAAf;IAA2B,GAAG,EAAEL,QAAhC;IAA0C,OAAO,EAAEC,UAAnD;IAAA,uBACE;MAAK,SAAS,EAAC,OAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAE,MAAMF,YAAY,CAAC,KAAD,CAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADK,CAOL;EAPK,CAAP;AASD,CAnBM;;GAAMD,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}